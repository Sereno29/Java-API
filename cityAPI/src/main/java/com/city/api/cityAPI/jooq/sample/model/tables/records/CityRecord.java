/*
 * This file is generated by jOOQ.
 */
package com.city.api.cityAPI.jooq.sample.model.tables.records;


import com.city.api.cityAPI.jooq.sample.model.tables.City;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityRecord extends UpdatableRecordImpl<CityRecord> implements Record9<Long, String, String, Boolean, Double, Double, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>city.city.ibge_id</code>.
     */
    public CityRecord setIbgeId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>city.city.ibge_id</code>.
     */
    public Long getIbgeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>city.city.uf</code>.
     */
    public CityRecord setUf(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>city.city.uf</code>.
     */
    public String getUf() {
        return (String) get(1);
    }

    /**
     * Setter for <code>city.city.name</code>.
     */
    public CityRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>city.city.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>city.city.is_capital</code>.
     */
    public CityRecord setIsCapital(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>city.city.is_capital</code>.
     */
    public Boolean getIsCapital() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>city.city.longitude</code>.
     */
    public CityRecord setLongitude(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>city.city.longitude</code>.
     */
    public Double getLongitude() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>city.city.latitude</code>.
     */
    public CityRecord setLatitude(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>city.city.latitude</code>.
     */
    public Double getLatitude() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>city.city.alternative_names</code>.
     */
    public CityRecord setAlternativeNames(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>city.city.alternative_names</code>.
     */
    public String getAlternativeNames() {
        return (String) get(6);
    }

    /**
     * Setter for <code>city.city.microregion</code>.
     */
    public CityRecord setMicroregion(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>city.city.microregion</code>.
     */
    public String getMicroregion() {
        return (String) get(7);
    }

    /**
     * Setter for <code>city.city.mesoregion</code>.
     */
    public CityRecord setMesoregion(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>city.city.mesoregion</code>.
     */
    public String getMesoregion() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, Boolean, Double, Double, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, Boolean, Double, Double, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return City.CITY_.IBGE_ID;
    }

    @Override
    public Field<String> field2() {
        return City.CITY_.UF;
    }

    @Override
    public Field<String> field3() {
        return City.CITY_.NAME;
    }

    @Override
    public Field<Boolean> field4() {
        return City.CITY_.IS_CAPITAL;
    }

    @Override
    public Field<Double> field5() {
        return City.CITY_.LONGITUDE;
    }

    @Override
    public Field<Double> field6() {
        return City.CITY_.LATITUDE;
    }

    @Override
    public Field<String> field7() {
        return City.CITY_.ALTERNATIVE_NAMES;
    }

    @Override
    public Field<String> field8() {
        return City.CITY_.MICROREGION;
    }

    @Override
    public Field<String> field9() {
        return City.CITY_.MESOREGION;
    }

    @Override
    public Long component1() {
        return getIbgeId();
    }

    @Override
    public String component2() {
        return getUf();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Boolean component4() {
        return getIsCapital();
    }

    @Override
    public Double component5() {
        return getLongitude();
    }

    @Override
    public Double component6() {
        return getLatitude();
    }

    @Override
    public String component7() {
        return getAlternativeNames();
    }

    @Override
    public String component8() {
        return getMicroregion();
    }

    @Override
    public String component9() {
        return getMesoregion();
    }

    @Override
    public Long value1() {
        return getIbgeId();
    }

    @Override
    public String value2() {
        return getUf();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Boolean value4() {
        return getIsCapital();
    }

    @Override
    public Double value5() {
        return getLongitude();
    }

    @Override
    public Double value6() {
        return getLatitude();
    }

    @Override
    public String value7() {
        return getAlternativeNames();
    }

    @Override
    public String value8() {
        return getMicroregion();
    }

    @Override
    public String value9() {
        return getMesoregion();
    }

    @Override
    public CityRecord value1(Long value) {
        setIbgeId(value);
        return this;
    }

    @Override
    public CityRecord value2(String value) {
        setUf(value);
        return this;
    }

    @Override
    public CityRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CityRecord value4(Boolean value) {
        setIsCapital(value);
        return this;
    }

    @Override
    public CityRecord value5(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public CityRecord value6(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public CityRecord value7(String value) {
        setAlternativeNames(value);
        return this;
    }

    @Override
    public CityRecord value8(String value) {
        setMicroregion(value);
        return this;
    }

    @Override
    public CityRecord value9(String value) {
        setMesoregion(value);
        return this;
    }

    @Override
    public CityRecord values(Long value1, String value2, String value3, Boolean value4, Double value5, Double value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CityRecord
     */
    public CityRecord() {
        super(City.CITY_);
    }

    /**
     * Create a detached, initialised CityRecord
     */
    public CityRecord(Long ibgeId, String uf, String name, Boolean isCapital, Double longitude, Double latitude, String alternativeNames, String microregion, String mesoregion) {
        super(City.CITY_);

        setIbgeId(ibgeId);
        setUf(uf);
        setName(name);
        setIsCapital(isCapital);
        setLongitude(longitude);
        setLatitude(latitude);
        setAlternativeNames(alternativeNames);
        setMicroregion(microregion);
        setMesoregion(mesoregion);
    }
}
